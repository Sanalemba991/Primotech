import { z, defineCollection } from 'astro:content';

const tipsCollection = defineCollection({
  type: "content",
  schema: z.object({
    id: z.number(),
    name: z.string(),
    title: z.string(),
    subTitle: z.string(),
    description: z.string(),
    location: z.string(),
    authorImage: z.string(),
    authorImageAlt: z.string(),
    videoClip: z.string().url(),
    startDate: z.coerce.date(),
    endDate: z.coerce.date(),
    eventImage: z.string(),
    eventImageAlt: z.string(),
    readTime: z.number(),
    titleOne: z.string(),
    descriptionOne: z.string(),
    imageOne: z.string(),
    titleTwo: z.string(),
    descriptionTwo: z.string(),
    imageTwo: z.string(),
    titleThree: z.string(),
    descriptionThree: z.string(),
    imageThree: z.string(),
    titleFour: z.string(),
    descriptionFour: z.string(),
    imageFour: z.string(),
    tags: z.array(z.string()),
    address: z.array(z.string()),
    contents: z.array(z.string()),
  }),
});
// src/content/config.ts


const pandapseries = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string().optional(),
    image: z.string().optional(),
    description: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string().optional(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Max Resolution": z.string().optional(),
      "Sensor": z.string().optional(),
      "Min. Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Digital Zoom": z.string().optional(),
      "Focal Length": z.string().optional(),
      "Iris Type": z.string().optional(),
      "Iris": z.string().optional(),
      "Field of View (H)": z.string().optional(),
      "Field of View (V)": z.string().optional(),
      "Field of View (D)": z.string().optional(),
      "Lens Type": z.string().optional(),
      "DORI Distance (Lens)": z.string().optional(),
      "DORI Distance (Detect)": z.string().optional(),
      "DORI Distance (Observe)": z.string().optional(),
      "DORI Distance (Recognize)": z.string().optional(),
      "DORI Distance (Identify)": z.string().optional(),
      "Supplemental Light": z.string().optional(),
      "Illumination Distance (IR)": z.string().optional(),
      "Illumination Distance (Warm Light)": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "U code": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "Dewarping": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Auto Tracking": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "4G Network Frequency": z.string().optional(),
      "4G Network Standard": z.string().optional(),
      "4G Card Type": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Audio I/O": z.string().optional(),
      "Alarm I/O": z.string().optional(),
      "Built in Mic": z.string().optional(),
      "Built in Speaker": z.string().optional(),
      "WIFI": z.string().optional(),
      "Network": z.string().optional(),
      "EMC": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Protection": z.string().optional(),
      "Power": z.string().optional(),
      "Power Consumption": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "LED Indicator": z.string().optional(),
    }).optional(),
  }),
});

const pandasseries = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string().optional(),
    image: z.string().optional(),
    description: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string().optional(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Minimum Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens Type": z.string().optional(),
      "Digital Zoom": z.string().optional(),
      "Iris": z.string().optional(),
      "Field of View (H)": z.string().optional(),
      "Field of View (V)": z.string().optional(),
      "Field of View (D)": z.string().optional(),
      "DORI Distance (Lens)": z.string().optional(),
      "DORI Distance (Detect)": z.string().optional(),
      "DORI Distance (Observe)": z.string().optional(),
      "DORI Distance (Recognize)": z.string().optional(),
      "DORI Distance (Identify)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Warm Light Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "Auto Tracking": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Wi-Fi": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Wireless Standards": z.string().optional(),
      "Frequency Range": z.string().optional(),
      "Channel Bandwidth": z.string().optional(),
      "Modulation Mode": z.string().optional(),
      "Security": z.string().optional(),
      "Transmit Power": z.string().optional(),
      "Receive Sensitivity": z.string().optional(),
      "Transmission Rate": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "Network": z.string().optional(),
      "EMC": z.string().optional(),
      "FCC": z.string().optional(),
      "RF": z.string().optional(),
      "CE RED": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Power": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "LED indicator": z.string().optional(),
    }).optional(),
  }),
});
const pandabseries = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string().optional(),
    image: z.string().optional(),
    description: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string().optional(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Minimum Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "Adjustment angle": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens Type": z.string().optional(),
      "Iris": z.string().optional(),
      "Field of View (H)": z.string().optional(),
      "Field of View (V)": z.string().optional(),
      "Field of View (D)": z.string().optional(),
      "DORI Distance (Lens)": z.string().optional(),
      "DORI Distance (Detect)": z.string().optional(),
      "DORI Distance (Observe)": z.string().optional(),
      "DORI Distance (Recognize)": z.string().optional(),
      "DORI Distance (Identify)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "H.264 code profile": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "U-code": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "ROI": z.string().optional(),
      "Video stream": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "Dewarping": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Wi-Fi": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "User/Host": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Audio I/O": z.string().optional(),
      "Alarm I/O": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "Network": z.string().optional(),
      "Video Output": z.string().optional(),
      "EMC": z.string().optional(),
      "RF": z.string().optional(),
      "CE RED": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Protection": z.string().optional(),
      "Power": z.string().optional(),
      "Power consumption": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Material": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "LED indicator": z.string().optional(),
    }).optional(),
  }),
});
const indoorSecurity = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string().optional(),
    image: z.string().optional(),
    description: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string().optional(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Minimum Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens Type": z.string().optional(),
      "Iris": z.string().optional(),
      "Angle of View (H)": z.string().optional(),
      "Angle of View (V)": z.string().optional(),
      "Angle of View (O)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "Auto tracking": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Wi-Fi": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Home Position": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "WIFI": z.string().optional(),
      "Network": z.string().optional(),
      "EMC": z.string().optional(),
      "FCC": z.string().optional(),
      "RF": z.string().optional(),
      "CE RED": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Power": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "LED indicator": z.string().optional(),
    }).optional(),
  }),
});
const outdoorSecurity = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string().optional(),
    image: z.string().optional(),
    description: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string().optional(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Min. Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens type": z.string().optional(),
      "Digital Zoom": z.string().optional(),
      "Iris": z.string().optional(),
      "Field of View (H)": z.string().optional(),
      "Field of View (V)": z.string().optional(),
      "Field of View (D)": z.string().optional(),
      "DORI Distance (Lens)": z.string().optional(),
      "DORI Distance (Detect)": z.string().optional(),
      "DORI Distance (Observe)": z.string().optional(),
      "DORI Distance (Recognize)": z.string().optional(),
      "DORI Distance (Identify)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Warm Light Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "Auto tracking": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Wi-Fi": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Home Position": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "Network": z.string().optional(),
      "EMC": z.string().optional(),
      "FCC": z.string().optional(),
      "RF": z.string().optional(),
      "CE RED": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Protection": z.string().optional(),
      "Power": z.string().optional(),
      "Power consumption": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "LED indicator": z.string().optional(),
    }).optional(),
  }),
});
const dualLight = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Min. Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens type": z.string().optional(),
      "Iris": z.string().optional(),
      "Field of View (H)": z.string().optional(),
      "Field of View (V)": z.string().optional(),
      "Field of View (D)": z.string().optional(),
      "Lens (mm)": z.string().optional(),
      "Detect (m)": z.string().optional(),
      "Observe (m)": z.string().optional(),
      "Recognize (m)": z.string().optional(),
      "Identify (m)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Warm Light Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "General Function": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Home Position": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "Network": z.string().optional(),
      "Power": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Dimensions (Ø x H)": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "Protection": z.string().optional(),
    }).optional(),
  }),
});

const pt = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Min. Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens type": z.string().optional(),
      "Optical Zoom": z.union([z.string(), z.number()]).optional(),
      "Iris": z.string().optional(),
      "Angle of View (H)": z.string().optional(),
      "Angle of View (V)": z.string().optional(),
      "Angle of View (O)": z.string().optional(),
      "Lens (mm)": z.string().optional(),
      "Detect (m)": z.string().optional(),
      "Observe (m)": z.string().optional(),
      "Recognize (m)": z.string().optional(),
      "Identify (m)": z.string().optional(),
      "IR Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "ROI": z.string().optional(),
      "Video Stream": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "Auto Tracking": z.string().optional(),
      "General Function": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "User/Host": z.string().optional(),
      "Security": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Pan Range": z.string().optional(),
      "Pan Speed": z.string().optional(),
      "Tilt Range": z.string().optional(),
      "Tilt Speed": z.string().optional(),
      "Number of Presets": z.union([z.string(), z.number()]).optional(),
      "Preset Patrol": z.string().optional(),
      "Route Patrol": z.string().optional(),
      "Recorded Patrol": z.string().optional(),
      "Patrol Stay Time": z.string().optional(),
      "Preset Image Freeze": z.string().optional(),
      "Home Position": z.string().optional(),
      "Audio I/O": z.string().optional(),
      "Alarm I/O": z.string().optional(),
      "Serial Port": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "Wi-Fi": z.string().optional(),
      "Network": z.string().optional(),
      "Video Output": z.string().optional(),
      "Power": z.string().optional(),
      "Power consumption": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Dimensions (Ø x H)": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
      "Protection": z.string().optional(),
    }).optional(),
  }),
});

const viral = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Lens": z.string().optional(),
      "Lens (mm)": z.string().optional(),
      "Detect (m)": z.string().optional(),
      "Observe (m)": z.string().optional(),
      "Recognize (m)": z.string().optional(),
      "Identify (m)": z.string().optional(),
      "Angle of View (H)": z.string().optional(),
      "Angle of View (V)": z.string().optional(),
      "Angle of View (O)": z.string().optional(),
      "Adjustment angle": z.string().optional(),
      "Shutter": z.string().optional(),
      "Minimum Illumination": z.string().optional(),
      "Digital noise reduction": z.string().optional(),
      "Day/Night": z.string().optional(),
      "IR Range": z.string().optional(),
      "Defog": z.string().optional(),
      "WDR": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Video Compression": z.string().optional(),
      "H.264 code profile": z.string().optional(),
      "Frame Rate": z.string().optional(),
      "Sub Stream": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "ROI": z.string().optional(),
      "Motion Detection": z.string().optional(),
      "Behavior Detection": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "Network": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Power": z.string().optional(),
      "Power consumption": z.string().optional(),
      "Dimensions (L × W × H)": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Ingress Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
    }).optional(),
  }),
});
const fixed = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Sensor": z.string().optional(),
      "Minimum Illumination": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Shutter": z.string().optional(),
      "Adjustment angle": z.string().optional(),
      "WDR": z.string().optional(),
      "Lens Type": z.string().optional(),
      "Iris": z.string().optional(),
      "Angle of View (H)": z.string().optional(),
      "Angle of View (V)": z.string().optional(),
      "Angle of View (O)": z.string().optional(),
      "2.8mm": z.string().optional(),
      "IR Range": z.string().optional(),
      "Wavelength": z.string().optional(),
      "IR On/Off Control": z.string().optional(),
      "Video Compression": z.string().optional(),
      "H.264 code profile": z.string().optional(),
      "Main Stream": z.string().optional(),
      "Sub Stream": z.string().optional(),
      "Video Bit Rate": z.string().optional(),
      "U-code": z.string().optional(),
      "OSD": z.string().optional(),
      "Privacy Mask": z.string().optional(),
      "ROI": z.string().optional(),
      "Motion Detection": z.string().optional(),
      "Video stream": z.string().optional(),
      "White Balance": z.string().optional(),
      "Digital Noise Reduction": z.string().optional(),
      "Smart IR": z.string().optional(),
      "Flip": z.string().optional(),
      "Dewarping": z.string().optional(),
      "HLC": z.string().optional(),
      "BLC": z.string().optional(),
      "Defog": z.string().optional(),
      "Basic Detection": z.string().optional(),
      "General Function": z.string().optional(),
      "Edge Storage": z.string().optional(),
      "Network Storage": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Audio Bitrate": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "Suppression": z.string().optional(),
      "Sampling Rate": z.string().optional(),
      "Protocols": z.string().optional(),
      "Compatible Integration": z.string().optional(),
      "User/Host": z.string().optional(),
      "Client": z.string().optional(),
      "Web Browser": z.string().optional(),
      "Audio I/O": z.string().optional(),
      "Alarm I/O": z.string().optional(),
      "Built-in Mic": z.string().optional(),
      "Built-in Speaker": z.string().optional(),
      "WIFI": z.string().optional(),
      "Network": z.string().optional(),
      "Video Output": z.string().optional(),
      "EMC": z.string().optional(),
      "FCC": z.string().optional(),
      "Safety": z.string().optional(),
      "Environment": z.string().optional(),
      "Protection": z.string().optional(),
      "Power": z.string().optional(),
      "Power consumption": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Storage Environment": z.string().optional(),
      "Surge Protection": z.string().optional(),
      "Reset Button": z.string().optional(),
    }).optional(),
  }),
});

const nvr = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "IP Video Input": z.string().optional(),
      "Incoming Bandwidth": z.string().optional(),
      "Outgoing Bandwidth": z.string().optional(),
      "Remote Users": z.string().optional(),
      "Protocols": z.string().optional(),
      "HDMI": z.string().optional(),
      "VGA": z.string().optional(),
      "Audio Output": z.string().optional(),
      "Recording Resolution": z.string().optional(),
      "Synchronous Playback": z.string().optional(),
      "Decoding format": z.string().optional(),
      "Liveview/Playback": z.string().optional(),
      "Capability": z.string().optional(),
      "SATA": z.string().optional(),
      "Capacity": z.string().optional(),
      "Network Interface": z.string().optional(),
      "USB Interface": z.string().optional(),
      "Interface": z.string().optional(),
      "Max Power": z.string().optional(),
      "Max Total Power": z.string().optional(),
      "Supported Standard": z.string().optional(),
      "Power Supply": z.string().optional(),
      "Power Consumption": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
    }).optional(),
  }),
});


const xvr = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Analog Video Input": z.string().optional(),
      "IP Video Input": z.string().optional(),
      "AHD input": z.string().optional(),
      "TVI input": z.string().optional(),
      "CVI input": z.string().optional(),
      "CVBS input": z.string().optional(),
      "Audio Input": z.string().optional(),
      "Audio Compression": z.string().optional(),
      "Incoming Bandwidth": z.string().optional(),
      "Outgoing Bandwidth": z.string().optional(),
      "Remote Users": z.string().optional(),
      "Protocols": z.string().optional(),
      "Browser": z.string().optional(),
      "VGA Output": z.string().optional(),
      "HDMI Output": z.string().optional(),
      "Audio Output": z.string().optional(),
      "Synchronous Playback": z.string().optional(),
      "Live view display": z.string().optional(),
      "Two-way Audio": z.string().optional(),
      "FTP/Schedule/Event Snapshot": z.string().optional(),
      "Recording Resolution": z.string().optional(),
      "Capability": z.string().optional(),
      "SATA": z.string().optional(),
      "Capacity": z.string().optional(),
      "VCA Detection": z.string().optional(),
      "VCA Search": z.string().optional(),
      "General Alarm": z.string().optional(),
      "Alert Alarm": z.string().optional(),
      "Network Interface": z.string().optional(),
      "USB Interface": z.string().optional(),
      "Serial Interface": z.string().optional(),
      "Power Supply": z.string().optional(),
      "Power Consumption": z.string().optional(),
      "Working Environment": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Certification": z.string().optional(),
    }).optional(),
  }),
});



const swit = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Ports": z.string().optional(),
      "Standards": z.string().optional(),
      "Switching capacity": z.string().optional(),
      "Forwarding performance": z.string().optional(),
      "Packet Buffer": z.string().optional(),
      "MAC": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Power supply": z.string().optional(),
      "PoE": z.string().optional(),
      "Max. PoE Power": z.string().optional(),
      "Cooling Fans": z.string().optional(),
      "Operating temperature": z.string().optional(),
      "Operating humidity": z.string().optional(),
      "Storage humidity": z.string().optional(),
      "Status Indicators": z.object({
        "Power": z.string().optional(),
        "PoE": z.string().optional(),
        "Network": z.string().optional()
      }).optional(),
      "Working Modes": z.object({
        "Default": z.string().optional(),
        "EXTEND": z.string().optional()
      }).optional()
    }).optional(),
  }),
});

const analog = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Pixel": z.string().optional(),
      "Size": z.string().optional(),
      "Minimum illumination": z.string().optional(),
      "Lens": z.string().optional(),
      "Lens mount": z.string().optional(),
      "Angle of view": z.object({
        "2.8mm": z.string().optional(),
        "4.0mm": z.string().optional()
      }).optional(),
      "Illumination distance": z.string().optional(),
      "Lifetime": z.string().optional(),
      "Resolution": z.object({
        "5MP@25fps": z.string().optional(),
        "5MP@20fps": z.string().optional(),
        "5MP@12.5fps": z.string().optional(),
        "4MP": z.string().optional(),
        "1080P": z.string().optional()
      }).optional(),
      "Video Formats": z.object({
        "TVI": z.string().optional(),
        "AHD": z.string().optional(),
        "CVI": z.string().optional(),
        "CVBS": z.string().optional()
      }).optional(),
      "Shutter time": z.string().optional(),
      "Exposure mode": z.string().optional(),
      "Day/Night": z.string().optional(),
      "Digital noise reduction": z.string().optional(),
      "White balance": z.string().optional(),
      "WDR": z.string().optional(),
      "Flip": z.string().optional(),
      "Power Interface": z.string().optional(),
      "Video output": z.string().optional(),
      "Temperature": z.string().optional(),
      "Humidity": z.string().optional(),
      "Surge protection": z.string().optional(),
      "Power": z.string().optional(),
      "Mount": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Material": z.string().optional(),
      "Weight": z.string().optional(),
      "OSD menu language": z.string().optional(),
      "Certifications": z.object({
        "EMC": z.string().optional(),
        "Safety": z.string().optional(),
        "Environment": z.string().optional(),
        "Protection": z.string().optional()
      }).optional()
    }).optional(),
  }),
});

const brackets = defineCollection({
  type: "content",
  schema: z.object({
    title: z.string(),
    description: z.string().optional(),
    image: z.string().optional(),
    images: z.array(
      z.object({
        url: z.string(),
        caption: z.string().optional(),
      })
    ).optional(),
    features: z.array(z.string()).optional(),
    specifications: z.object({
      "Application": z.string().optional(),
      "Dimensions": z.string().optional(),
      "Weight": z.string().optional(),
      "Material": z.string().optional()
    }).optional(),
  }),
});

export const collections = {
     tips: tipsCollection,
     pandapseries: pandapseries,
     pandasseries: pandasseries,
     pandabseries: pandabseries,
     indoorSecurity: indoorSecurity,
     outdoorSecurity: outdoorSecurity,
     dualLight: dualLight,
     pt: pt,
     viral: viral,
     fixed: fixed,
     nvr: nvr,
     xvr:xvr,
     swit: swit,
     analog: analog,
     brackets: brackets
};