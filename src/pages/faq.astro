---
// filepath: c:\Users\LENOVO\Primotech\src\pages\faq.astro
import Layout from "../layouts/Layout.astro";

const title = "Frequently Asked Questions | PrimoTech LLC";
const description = "Find answers to common questions about PrimoTech LLC products, services, and support.";

const faqs = [
  {
    id: 1,
    category: "General",
    question: "How to change the login password of admin user?",
    answer: "Log into the web interface of the camera, go to【Security】>【User List】"
  },
  {
    id: 2,
    category: "Network", 
    question: "How to modify the IP address of Uniarch product?",
    answer: "The default IP address of camera is 192.168.1.13, DHCP is enabled by default."
  },
  {
    id: 3,
    category: "Network",
    question: "How to change network settings on my device?",
    answer: "Two modes can be selected for obtaining IP address, which are static IP address and DHCP respectively."
  },
  {
    id: 4,
    category: "Features",
    question: "Does PrimoTech support cloud storage?",
    answer: "Yes, our cameras support secure cloud storage and local SD card recording with multiple backup options."
  },
  {
    id: 5,
    category: "Support",
    question: "Where can I download manuals?",
    answer: "Visit our Downloads page for the latest manuals and firmware for your product model."
  },
  {
    id: 6,
    category: "Warranty",
    question: "What is the warranty period?",
    answer: "All PrimoTech products include a 3-year limited warranty with comprehensive coverage."
  }
];

const faqCategories = [...new Set(faqs.map(faq => faq.category))];
---

<Layout title={title} description={description}>
  <main class="min-h-screen bg-gray-50 pb-20">
    <!-- Cinematic Banner -->
    <section class="relative h-[60vh] lg:h-[70vh] overflow-hidden faq-hero mb-14">
      <div class="absolute inset-0">
        <img 
          src="/images/aboutus-background.png"
          alt="PrimoTech office team"
          class="w-full h-full object-cover faq-hero-image"
          loading="eager"
        />
        <div class="absolute inset-0 bg-black/40 faq-hero-overlay"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-teal-900/80 to-transparent faq-hero-overlay"></div>
      </div>
      <div class="relative z-10 flex items-center h-full">
        <div class="container mx-auto px-6 lg:px-8">
          <div class="max-w-2xl faq-hero-content">
            <h1 class="text-5xl lg:text-7xl font-bold text-white mb-6 faq-hero-title">
              Frequently Asked Questions
            </h1>
            <p class="text-xl lg:text-2xl text-gray-200 mb-4 faq-hero-subtitle">
              Quick answers about PrimoTech products and support.
            </p>
            <p class="text-lg lg:text-xl text-gray-300 mb-8 faq-hero-desc">
              Find solutions to common questions or reach out to our team for more help.
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- FAQ Content -->
    <section class="max-w-6xl mx-auto px-4 faq-content-section">
      <div class="mb-12 flex flex-wrap gap-3 justify-center faq-filter-container">
        <button class="faq-cat-btn active" data-category="All" onclick="filterFaqs('All')">All</button>
        {faqCategories.map(category => (
          <button class="faq-cat-btn" data-category={category} onclick={`filterFaqs('${category}')`}>{category}</button>
        ))}
      </div>

      <!-- FAQ Grid -->
      <div id="faq-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 faq-grid-container">
        {faqs.map((faq, index) => (
          <div class="faq-item bg-white rounded-lg shadow-sm p-6 border border-gray-200 hover:shadow-md transition-all duration-300" 
               data-category={faq.category} 
               style={`--delay: ${index * 0.05}s`}>
            <div class="flex items-start mb-4">
              <div class="w-8 h-8 bg-teal-100 rounded-full flex items-center justify-center mr-3 flex-shrink-0">
                <svg class="w-5 h-5 text-teal-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 leading-tight">{faq.question}</h3>
            </div>
            <p class="text-gray-600 text-sm leading-relaxed mb-4">{faq.answer}</p>
          </div>
        ))}
      </div>
      
      <div id="no-results" class="hidden text-center py-12">
        <svg class="w-16 h-16 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 class="text-lg font-medium text-gray-700 mb-1">No results found</h3>
        <p class="text-gray-500">Try selecting a different category</p>
      </div>
    </section>
  </main>
</Layout>

<style is:global>
/* Hero Animations */
.faq-hero {
  opacity: 0;
  transform: translateY(50px);
  transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  overflow-x: hidden;
}
.faq-hero.faq-hero-revealed {
  opacity: 1;
  transform: translateY(0);
}
.faq-hero-image {
  transform: scale(1.1);
  opacity: 0;
  transition: all 2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.faq-hero.faq-hero-revealed .faq-hero-image {
  transform: scale(1);
  opacity: 1;
  transition-delay: 0.2s;
}
.faq-hero-overlay {
  opacity: 0;
  transition: opacity 1s ease-out;
}
.faq-hero.faq-hero-revealed .faq-hero-overlay {
  opacity: 1;
  transition-delay: 0.4s;
}
.faq-hero-content {
  opacity: 0;
  transform: translateX(-60px);
  transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.faq-hero.faq-hero-revealed .faq-hero-content {
  opacity: 1;
  transform: translateX(0);
  transition-delay: 0.6s;
}
.faq-hero-title {
  opacity: 0;
  transform: translateY(40px);
  transition: all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
}
.faq-hero.faq-hero-revealed .faq-hero-title {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.8s;
}
.faq-hero-subtitle {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.faq-hero.faq-hero-revealed .faq-hero-subtitle {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 1s;
}
.faq-hero-desc {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}
.faq-hero.faq-hero-revealed .faq-hero-desc {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 1.2s;
}

/* Section Scroll Animations */
.faq-content-section {
  opacity: 0;
  transform: translateY(40px);
  transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.faq-content-section.section-visible {
  opacity: 1;
  transform: translateY(0);
}

.faq-filter-container {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease-out;
}

.section-visible .faq-filter-container {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.2s;
}

.faq-grid-container {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease-out;
}

.section-visible .faq-grid-container {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.4s;
}

/* Category Button Styles */
.faq-cat-btn {
  padding: 0.375rem 1rem;
  border-radius: 20px;
  border: 1.5px solid #99f6e4;
  background: white;
  color: #14b8a6;
  font-weight: 500;
  font-size: 0.8125rem;
  cursor: pointer;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  min-width: 60px;
  text-align: center;
  letter-spacing: 0.025em;
  backdrop-filter: blur(10px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.faq-cat-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.4s ease;
}

.faq-cat-btn:hover::before {
  left: 100%;
}

.faq-cat-btn.active {
  background: linear-gradient(135deg, #2dd4bf, #14b8a6);
  color: white;
  border-color: #2dd4bf;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(45, 212, 191, 0.25);
}

.faq-cat-btn:hover:not(.active) {
  background: rgba(45, 212, 191, 0.1);
  border-color: #2dd4bf;
  transform: translateY(-1px);
  box-shadow: 0 3px 8px rgba(45, 212, 191, 0.15);
}

.faq-cat-btn.loading {
  position: relative;
  color: transparent;
  pointer-events: none;
}

.faq-cat-btn.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid rgba(255,255,255,0.3);
  border-top-color: white;
  border-radius: 50%;
  animation: spin 0.6s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* FAQ Item Animations */
.faq-item {
  opacity: 0;
  transform: translateY(20px);
  animation: faqItemEnter 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  animation-delay: calc(var(--delay) + 0.4s);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

@keyframes faqItemEnter {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.faq-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #2dd4bf, #14b8a6);
  opacity: 0;
  transition: all 0.3s ease;
  transform: translateX(-100%);
}

.faq-item:hover::before {
  opacity: 1;
  transform: translateX(0);
}

.faq-item:hover {
  transform: translateY(-4px) !important;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

/* Exit animation for filtered out items */
.faq-item.faq-exit {
  animation: faqItemExit 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  pointer-events: none;
}

@keyframes faqItemExit {
  0% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  100% {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
}

/* Grid container transitions */
#faq-list {
  will-change: transform, opacity;
  transition: height 0.4s ease-out;
}

/* No results animation */
#no-results {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

#no-results.show {
  opacity: 1;
  transform: translateY(0);
}
</style>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  // Banner animation
  const heroSection = document.querySelector('.faq-hero');
  if (heroSection) {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          heroSection.classList.add('faq-hero-revealed');
          observer.unobserve(heroSection);
        }
      });
    }, { threshold: 0.1 });
    observer.observe(heroSection);
  }

  // Section scroll animation
  const contentSection = document.querySelector('.faq-content-section');
  if (contentSection) {
    const sectionObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('section-visible');
          sectionObserver.unobserve(entry.target);
        }
      });
    }, { 
      threshold: 0.1,
      rootMargin: '0px 0px -100px 0px' // Trigger slightly before reaching the section
    });
    sectionObserver.observe(contentSection);
  }

  // Enhanced FAQ filtering with smooth transitions
  window.filterFaqs = (category) => {
    const container = document.getElementById('faq-list');
    const items = Array.from(document.querySelectorAll('.faq-item'));
    const noResults = document.getElementById('no-results');
    const activeBtn = document.querySelector(`.faq-cat-btn[data-category="${category}"]`);
    let visibleCount = 0;

    // Add loading state to active button
    activeBtn.classList.add('loading');

    // Update active button state
    document.querySelectorAll('.faq-cat-btn').forEach(btn => {
      btn.classList.remove('active');
    });

    // First, apply exit animations to all items that don't match
    items.forEach(item => {
      const itemCategory = item.getAttribute('data-category');
      const shouldShow = category === 'All' || itemCategory === category;
      
      if (!shouldShow && item.style.display !== 'none') {
        item.classList.add('faq-exit');
      } else if (shouldShow) {
        visibleCount++;
      }
    });

    // After exit animations complete, update the display
    setTimeout(() => {
      // Hide exited items and reset their state
      items.forEach(item => {
        const itemCategory = item.getAttribute('data-category');
        const shouldShow = category === 'All' || itemCategory === category;
        
        if (!shouldShow) {
          item.style.display = 'none';
          item.classList.remove('faq-exit');
        } else {
          if (item.style.display === 'none') {
            item.style.display = 'block';
            item.style.animation = 'none';
            void item.offsetHeight; // Trigger reflow
            item.style.animation = '';
          }
          item.classList.remove('faq-exit');
        }
      });

      // Update active button after animation starts
      activeBtn.classList.remove('loading');
      activeBtn.classList.add('active');

      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
        setTimeout(() => {
          noResults.classList.add('show');
        }, 10);
      } else {
        noResults.classList.remove('show');
        setTimeout(() => {
          noResults.classList.add('hidden');
        }, 300);
      }

      // Animate container height change
      container.style.transition = 'height 0.4s ease-out';
      container.style.height = `${container.scrollHeight}px`;
      
      // Remove fixed height after transition
      setTimeout(() => {
        container.style.transition = 'none';
        container.style.height = 'auto';
      }, 400);

    }, 300); // Match this duration with the exit animation
  };

  // Initialize all items as visible
  document.querySelectorAll('.faq-item').forEach(item => {
    item.style.display = 'block';
  });
});
</script>