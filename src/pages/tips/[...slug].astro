---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import "../../styles/global.css";


// Generate static paths for all tips
export async function getStaticPaths() {
  const tips = await getCollection('tips');
  return tips.map((tip) => ({
    params: { slug: tip.slug },
    props: { tip },
  }));
}

// Get the current tip from props
type Props = {
  tip: CollectionEntry<"tips">;
};

const { tip } = Astro.props;
const { Content } = await tip.render();

// Format date helper
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

// SEO meta data
const title = `${tip.data.title} | Primotech Tips`;
const description = tip.data.subTitle;
const canonicalUrl = `https://primotechllc.com/tips/${tip.slug}`;

// Get related tips (excluding current tip)
const allTips = await getCollection("tips");
const relatedTips = allTips
  .filter(t => t.slug !== tip.slug)
  .slice(0, 3);
  
// JSON-LD Structured Data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": tip.data.title,
  "description": description,
  "url": canonicalUrl,
  "image": `https://primotechllc.com${tip.data.eventImage}`,
  "datePublished": tip.data.pubDate || new Date().toISOString(),
  "dateModified": tip.data.pubDate || new Date().toISOString(),
  "author": {
    "@type": "Person",
    "name": "Primotech Team",
    "url": "https://primotechllc.com/"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Primotech LLC",
    "logo": {
      "@type": "ImageObject",
      "url": "https://primotechllc.com/images/logo.png"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalUrl
  },
  "keywords": tip.data.tags?.join(", ") || ""
};
---

<Layout
  title={title}
  description={description}
  keywords={tip.data.tags?.join(', ')}
  structuredData={structuredData}
>
  <!-- Animated Navigation Header -->
  <header class="sticky top-0 z-50 bg-white/80 backdrop-blur-lg border-b border-gray-200/50 transition-all duration-500 ease-out" data-animate>
    <div class="container mx-auto px-4 py-4">
      <!-- Breadcrumb -->
      <nav class="flex items-center space-x-2 text-sm text-gray-600">
        <a href="/" class="hover:text-blue-600 transition-colors duration-300 ease-in-out">Home</a>
        <svg class="w-4 h-4 transition-transform duration-300 ease-out" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <a href="/tips" class="hover:text-blue-600 transition-colors duration-300 ease-in-out">Tips</a>
        <svg class="w-4 h-4 transition-transform duration-300 ease-out" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <span class="text-blue-600 font-medium transition-colors duration-500 ease-out">{tip.data.title}</span>
      </nav>
    </div>
  </header>

  <!-- Main Content -->
  <main class="bg-gradient-to-br from-gray-50 via-white to-gray-100 min-h-screen">
    <div class="container mx-auto px-4 py-8">
      <div class="max-w-4xl mx-auto">
        <!-- Article Header -->
        <div class="text-center mb-12" data-animate data-animate-delay="100">
          <!-- Category Badge -->
          <div class="inline-flex items-center px-6 py-3 rounded-full bg-gradient-to-r from-blue-500/10 to-purple-500/10 border border-blue-200/50 backdrop-blur-sm mb-8 transition-all duration-500 ease-[cubic-bezier(0.22,1,0.36,1)] hover:scale-105 hover:shadow-lg">
            <svg class="w-5 h-5 text-blue-500 mr-3 transition-transform duration-500 ease-out group-hover:rotate-6" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
            </svg>
            <span class="text-blue-700 font-semibold text-sm tracking-wide transition-colors duration-300 ease-in-out">Tech Tips</span>
          </div>
          
          <!-- Tip Title -->
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-gray-900 bg-clip-text text-transparent mb-8 leading-tight transition-all duration-700 ease-[cubic-bezier(0.16,0.85,0.3,1.05)]" data-animate data-animate-delay="200">
            {tip.data.title}
          </h1>
          
          <!-- Tip Meta -->
          <div class="flex flex-col sm:flex-row items-center justify-center space-y-6 sm:space-y-0 sm:space-x-12 text-gray-600 mb-8" data-animate data-animate-delay="300">
            <!-- Location Info -->
            <div class="flex items-center space-x-4 group">
              <div class="relative">
                <div class="w-16 h-16 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center border-3 border-blue-300 shadow-lg transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] group-hover:shadow-2xl group-hover:border-blue-500">
                  <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                  </svg>
                </div>
                <div class="absolute -bottom-1 -right-1 w-5 h-5 bg-green-400 rounded-full border-2 border-white transition-all duration-300 ease-out"></div>
              </div>
              <div class="text-left">
                <p class="font-bold text-gray-900 text-lg transition-colors duration-300 ease-in-out">{tip.data.location}</p>
                <p class="text-sm text-gray-500 transition-colors duration-300 ease-in-out">Location</p>
              </div>
            </div>
            
            <!-- Read Time -->
            <div class="flex items-center space-x-8 text-sm">
              <div class="flex items-center group">
                <svg class="w-5 h-5 mr-2 transition-transform duration-500 ease-out group-hover:rotate-6" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                </svg>
                <span class="font-medium transition-colors duration-500 ease-in-out group-hover:text-blue-600">{tip.data.readTime} min read</span>
              </div>
            </div>
          </div>
          
          <!-- Tags -->
          {tip.data.tags && (
            <div class="flex flex-wrap justify-center gap-3 mb-8" data-animate data-animate-delay="400">
              {tip.data.tags.map((tag, index) => (
                <span 
                  class="px-4 py-2 bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 text-sm rounded-full backdrop-blur-sm border border-gray-300/50 transition-all duration-500 ease-[cubic-bezier(0.22,1,0.36,1)] hover:from-blue-100 hover:to-blue-200 hover:text-blue-800 hover:border-blue-300 hover:scale-105 hover:shadow-lg"
                  data-animate data-animate-delay={100 + (index * 50)}
                >
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </div>

        <!-- Featured Image -->
        {tip.data.eventImage && (
          <div class="relative rounded-3xl overflow-hidden shadow-2xl mb-16 group transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] hover:shadow-3xl" data-animate data-animate-delay="500">
            <img
              src={tip.data.eventImage}
              alt={tip.data.eventImageAlt}
              class="w-full h-96 object-cover transition-transform duration-1000 ease-[cubic-bezier(0.16,0.85,0.3,1.05)] group-hover:scale-105"
              loading="lazy"
              decoding="async"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent transition-opacity duration-700 ease-out group-hover:from-black/40"></div>
            <div class="absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 opacity-0 transition-opacity duration-700 ease-in-out group-hover:opacity-100"></div>
          </div>
        )}
        
        <!-- Tip Content -->
        <article class="bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl p-8 md:p-16 mb-16 transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] hover:shadow-2xl border border-gray-200/50" data-animate data-animate-delay="600">
          <!-- Tip Description -->
          <div class="prose prose-lg max-w-none mb-12">
            <p class="text-xl text-gray-700 leading-relaxed border-l-4 border-gradient-to-b border-blue-500 pl-8 italic bg-gradient-to-r from-blue-50/50 to-transparent py-4 rounded-r-lg transition-all duration-500 ease-out">
              {tip.data.subTitle}
            </p>
          </div>
          
          <!-- Tip Body -->
          <div class="prose prose-lg prose-blue max-w-none transition-opacity duration-500 ease-in-out">
            <Content />
          </div>
        </article>
        
        <!-- Enhanced Share Section -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 mb-16 transition-all duration-300 ease-out">
          <div class="text-center">
            <h3 class="text-2xl font-semibold text-gray-800 mb-6">Share This Tip</h3>
            <div class="flex flex-col sm:flex-row justify-center items-center gap-4">
              <a
                href={`https://twitter.com/intent/tweet?url=${canonicalUrl}&text=${encodeURIComponent(tip.data.title)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center justify-center px-6 py-3 bg-blue-600 text-white rounded-md transition-all duration-300 ease-out hover:bg-blue-700 hover:shadow-md hover:-translate-y-0.5 min-w-[130px]"
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
                <span class="font-medium">Twitter</span>
              </a>
              
              <a
                href={`https://www.linkedin.com/sharing/share-offsite/?url=${canonicalUrl}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center justify-center px-6 py-3 bg-blue-700 text-white rounded-md transition-all duration-300 ease-out hover:bg-blue-800 hover:shadow-md hover:-translate-y-0.5 min-w-[130px]"
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
                <span class="font-medium">LinkedIn</span>
              </a>
              
              <button
                onclick="navigator.share && navigator.share({title: document.title, url: window.location.href}) || copyToClipboard(window.location.href)"
                class="flex items-center justify-center px-6 py-3 bg-gray-600 text-white rounded-md transition-all duration-300 ease-out hover:bg-gray-700 hover:shadow-md hover:-translate-y-0.5 min-w-[130px]"
              >
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                </svg>
                <span class="font-medium">Share</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Enhanced Related Tips Section -->
    {relatedTips.length > 0 && (
      <section class="bg-gradient-to-br from-gray-100 via-white to-gray-100 py-20" data-animate>
        <div class="container mx-auto px-4">
          <div class="text-center mb-16" data-animate data-animate-delay="100">
            <h2 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-gray-900 bg-clip-text text-transparent mb-6 transition-all duration-700 ease-out">
              Related Tips
            </h2>
            <div class="w-32 h-1 bg-gradient-to-r from-blue-600 via-purple-500 to-cyan-500 mx-auto rounded-full transition-all duration-1000 ease-[cubic-bezier(0.22,1,0.36,1)]"></div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 max-w-7xl mx-auto">
            {relatedTips.map((relatedTip, index) => (
              <article 
                class="group bg-white/90 backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] hover:shadow-2xl hover:-translate-y-2 border border-gray-200/50"
                data-animate data-animate-delay={200 + (index * 150)}
              >
                <div class="relative overflow-hidden">
                  {relatedTip.data.eventImage && (
                    <div class="relative h-56 overflow-hidden">
                      <img
                        src={relatedTip.data.eventImage}
                        alt={relatedTip.data.eventImageAlt}
                        class="w-full h-full object-cover transition-transform duration-1000 ease-[cubic-bezier(0.16,0.85,0.3,1.05)] group-hover:scale-110"
                        loading="lazy"
                        decoding="async"
                      />
                      <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent transition-opacity duration-700 ease-out group-hover:from-black/70"></div>
                      <div class="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 transition-opacity duration-700 ease-in-out group-hover:opacity-100"></div>
                    </div>
                  )}
                  
                  <div class="p-8">
                    <div class="flex items-center justify-between mb-4 text-sm text-gray-500">
                      <span class="bg-gray-100 px-3 py-1 rounded-full font-medium transition-all duration-500 ease-out group-hover:bg-blue-100 group-hover:text-blue-700">{relatedTip.data.location}</span>
                      <span class="font-medium transition-colors duration-500 ease-in-out group-hover:text-blue-600">{relatedTip.data.readTime} min read</span>
                    </div>
                    
                    <h3 class="text-xl font-bold text-gray-900 mb-4 transition-colors duration-500 ease-in-out group-hover:text-blue-600 line-clamp-2 leading-relaxed">
                      {relatedTip.data.title}
                    </h3>
                    
                    <p class="text-gray-600 mb-6 line-clamp-2 leading-relaxed transition-colors duration-300 ease-in-out">
                      {relatedTip.data.subTitle}
                    </p>
                    
                    <a 
                      href={`/tips/${relatedTip.slug}`}
                      class="inline-flex items-center text-blue-600 font-bold transition-all duration-700 ease-[cubic-bezier(0.22,1,0.36,1)] group/link hover:text-blue-700 hover:scale-105"
                    >
                      <span class="mr-2">Read Tip</span>
                      <svg class="w-5 h-5 transition-transform duration-500 ease-out group-hover/link:translate-x-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                      </svg>
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}
    
    
  </main>
</Layout>

<script is:inline>
  // Clipboard fallback function with smoother animation
  function copyToClipboard(text) {
    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard.writeText(text).then(() => {
        showNotification('Link copied to clipboard!');
      });
    } else {
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        document.execCommand('copy');
        showNotification('Link copied to clipboard!');
      } catch (err) {
        console.error('Failed to copy text: ', err);
        showNotification('Failed to copy link');
      }
      textArea.remove();
    }
  }

  // Enhanced notification function with smoother animation
  function showNotification(message) {
    const notification = document.createElement('div');
    notification.textContent = message;
    notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full transition-all duration-500 ease-[cubic-bezier(0.22,1,0.36,1)]';
    document.body.appendChild(notification);
    
    // Force reflow
    void notification.offsetWidth;
    
    notification.style.transform = 'translateX(0)';
    
    setTimeout(() => {
      notification.style.transform = 'translateX(120%)';
      setTimeout(() => notification.remove(), 500);
    }, 3000);
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Enhanced Intersection Observer with smoother thresholds
    const observerOptions = {
      threshold: 0.05,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-visible');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    // Observe all elements with data-animate attribute
    document.querySelectorAll('[data-animate]').forEach((el) => {
      observer.observe(el);
    });
    
    // Smoother reading progress with momentum
    const progressBar = document.createElement('div');
    progressBar.className = 'fixed top-0 left-0 h-1.5 bg-gradient-to-r from-blue-600 via-purple-500 to-cyan-500 z-50 transition-all duration-500 ease-out shadow-lg';
    progressBar.style.width = '0%';
    progressBar.style.opacity = '0';
    document.body.appendChild(progressBar);
    
    let lastScrollY = window.scrollY;
    let ticking = false;
    let currentProgress = 0;
    let targetProgress = 0;
    
    const updateProgressBar = () => {
      const scrollTop = window.scrollY;
      const docHeight = document.body.offsetHeight - window.innerHeight;
      targetProgress = (scrollTop / docHeight) * 100;
      
      // Smooth interpolation with momentum
      currentProgress += (targetProgress - currentProgress) * 0.1;
      
      progressBar.style.width = currentProgress + '%';
      progressBar.style.opacity = targetProgress > 5 ? '1' : '0';
      
      // Continue animation if not at target
      if (Math.abs(currentProgress - targetProgress) > 0.5) {
        requestAnimationFrame(updateProgressBar);
      }
    };
    
    window.addEventListener('scroll', () => {
      lastScrollY = window.scrollY;
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateProgressBar();
          ticking = false;
        });
        ticking = true;
      }
    });
  });
  
  // Make functions globally available
  window.copyToClipboard = copyToClipboard;
  window.showNotification = showNotification;
</script>

<style is:global>
  /* Base transition settings */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, 
                         fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.16, 0.85, 0.3, 1.05);
    transition-duration: 300ms;
  }

  /* Image transitions */
  img {
    transition: transform 800ms cubic-bezier(0.16, 0.85, 0.3, 1.05), 
                opacity 500ms ease-out;
    will-change: transform, opacity;
  }

  /* Animation classes */
  [data-animate] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 800ms ease-out, transform 800ms cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
  }

  [data-animate].animate-visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Staggered animations */
  [data-animate-delay="100"] { transition-delay: 100ms; }
  [data-animate-delay="200"] { transition-delay: 200ms; }
  [data-animate-delay="300"] { transition-delay: 300ms; }
  [data-animate-delay="400"] { transition-delay: 400ms; }
  [data-animate-delay="500"] { transition-delay: 500ms; }
  [data-animate-delay="600"] { transition-delay: 600ms; }
  [data-animate-delay="700"] { transition-delay: 700ms; }
  [data-animate-delay="800"] { transition-delay: 800ms; }
  [data-animate-delay="900"] { transition-delay: 900ms; }
  [data-animate-delay="1000"] { transition-delay: 1000ms; }

  /* Smooth page transitions */
  html {
    scroll-behavior: smooth;
  }

  /* Gradient transitions */
  .bg-gradient-to-r {
    transition: background-position 800ms ease;
    background-size: 200% 200%;
  }

  .hover\:bg-gradient-shift:hover {
    background-position: 100% 50%;
  }

  /* Special easing functions */
  .ease-\[cubic-bezier\(0\.22\,1\,0\.36\,1\)\] {
    transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
  }

  /* Performance optimizations */
  .backdrop-blur-sm {
    will-change: backdrop-filter;
  }

  /* Line clamping */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>