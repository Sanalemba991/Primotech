---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

const tips = await getCollection('tips');

// Group tips by category for better organization
const tipsByCategory = tips.reduce((acc, tip) => {
  const category = tip.data.category || 'Tips & Tricks';
  if (!acc[category]) acc[category] = [];
  acc[category].push(tip);
  return acc;
}, {});

// Featured tip (latest one)
const featuredTip = tips[0];
---

<Layout title="Tips & Guides Collection | Primotech" description="Explore our comprehensive collection of technology tips, guides, and insights for security solutions.">
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-blue-50 via-white to-purple-50 py-20 overflow-hidden">
    <div class="absolute inset-0 bg-grid-pattern opacity-5"></div>
    <div class="container mx-auto px-4 relative z-10">
      <div class="text-center max-w-4xl mx-auto" data-animate>
        <h1 class="text-5xl md:text-6xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-purple-800 bg-clip-text text-transparent mb-6 leading-tight">
          Tips & Guides
        </h1>
        <p class="text-xl text-gray-600 mb-8 leading-relaxed">
          Discover expert insights, practical tips, and comprehensive guides to help you make the most of your technology solutions.
        </p>
        <div class="w-32 h-1 bg-gradient-to-r from-blue-600 via-purple-500 to-cyan-500 mx-auto rounded-full"></div>
      </div>
    </div>
  </section>

  <!-- Category Navigation -->
  <section class="bg-white border-b border-gray-100 sticky top-0 z-40 backdrop-blur-lg bg-white/90">
    <div class="container mx-auto px-4 py-4">
      <div class="flex items-center justify-center space-x-8 overflow-x-auto">
        <button class="category-btn active" data-category="all">
          <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"/>
          </svg>
          All Tips
        </button>
        {Object.keys(tipsByCategory).map(category => (
          <button class="category-btn" data-category={category.toLowerCase().replace(/\s+/g, '-')}>
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
            </svg>
            {category}
          </button>
        ))}
      </div>
    </div>
  </section>

  <main class="bg-gradient-to-br from-gray-50 via-white to-blue-50 min-h-screen">
    <!-- Featured Tip Section -->
    {featuredTip && (
      <section class="py-16" data-animate>
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-4xl font-bold text-gray-900 mb-4">Featured Tip</h2>
            <div class="w-24 h-1 bg-gradient-to-r from-blue-600 to-purple-600 mx-auto rounded-full"></div>
          </div>
          
          <div class="max-w-6xl mx-auto">
            <article class="group bg-white rounded-3xl shadow-xl overflow-hidden transition-all duration-700 ease-out hover:shadow-2xl hover:-translate-y-2 border border-gray-100">
              <div class="grid md:grid-cols-2 gap-0">
                <div class="relative overflow-hidden">
                  <img
                    src={featuredTip.data.eventImage}
                    alt={featuredTip.data.eventImageAlt}
                    class="w-full h-80 md:h-full object-cover transition-transform duration-1000 ease-out group-hover:scale-105"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"></div>
                  <div class="absolute top-6 left-6">
                    <span class="bg-blue-600 text-white px-4 py-2 rounded-full text-sm font-semibold">
                      Featured
                    </span>
                  </div>
                </div>
                
                <div class="p-8 md:p-12 flex flex-col justify-center">
                  <div class="mb-4">
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                      {featuredTip.data.category || 'Tips & Tricks'}
                    </span>
                  </div>
                  
                  <h3 class="text-3xl font-bold text-gray-900 mb-4 group-hover:text-blue-600 transition-colors duration-300">
                    {featuredTip.data.title}
                  </h3>
                  
                  <p class="text-gray-600 mb-6 leading-relaxed">
                    {featuredTip.data.subTitle}
                  </p>
                  
                  <div class="flex items-center justify-between mb-6">
                    <div class="flex items-center text-sm text-gray-500">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                      </svg>
                      {featuredTip.data.location}
                    </div>
                    <div class="flex items-center text-sm text-gray-500">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                      </svg>
                      {featuredTip.data.readTime} min read
                    </div>
                  </div>
                  
                  <a
                    href={`/tips/${featuredTip.slug}`}
                    class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl transition-all duration-300 ease-out hover:from-blue-700 hover:to-purple-700 hover:shadow-lg hover:-translate-y-0.5 group/btn"
                  >
                    <span class="mr-2">Read Full Tip</span>
                    <svg class="w-5 h-5 transition-transform duration-300 ease-out group-hover/btn:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          </div>
        </div>
      </section>
    )}

    <!-- Tips Grid Section -->
    <section class="py-16">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16" data-animate>
          <h2 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-gray-900 via-blue-800 to-gray-900 bg-clip-text text-transparent mb-6">
            All Tips & Guides
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            Explore our comprehensive collection of expert tips and detailed guides designed to enhance your technology experience.
          </p>
          <div class="w-32 h-1 bg-gradient-to-r from-blue-600 via-purple-500 to-cyan-500 mx-auto rounded-full mt-8"></div>
        </div>

        <div class="tips-grid" id="tips-container">
          {tips.map((tip, index) => (
            <article 
              class="tip-card group" 
              data-category={tip.data.category?.toLowerCase().replace(/\s+/g, '-') || 'tips-tricks'}
              data-animate 
              data-animate-delay={200 + (index * 100)}
            >
              <a href={`/tips/${tip.slug}`} class="block h-full">
                <div class="relative overflow-hidden rounded-t-2xl">
                  <img 
                    src={tip.data.eventImage} 
                    alt={tip.data.eventImageAlt}
                    class="w-full h-56 object-cover transition-transform duration-700 ease-out group-hover:scale-110"
                    loading="lazy"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                  <div class="absolute top-4 left-4">
                    <span class="bg-blue-600/90 backdrop-blur-sm text-white px-3 py-1 rounded-full text-sm font-medium">
                      {tip.data.category || 'Tips & Tricks'}
                    </span>
                  </div>
                </div>
                
                <div class="tip-content p-6">
                  <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors duration-300 line-clamp-2">
                    {tip.data.title}
                  </h3>
                  
                  <p class="text-gray-600 mb-4 line-clamp-2 leading-relaxed">
                    {tip.data.subTitle}
                  </p>
                  
                  <div class="tip-meta flex items-center justify-between mb-4 text-sm text-gray-500">
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                      </svg>
                      <span class="location">{tip.data.location}</span>
                    </div>
                    <div class="flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                      </svg>
                      <span class="read-time">{tip.data.readTime} min read</span>
                    </div>
                  </div>
                  
                  {tip.data.tags && (
                    <div class="tags flex flex-wrap gap-2 mb-4">
                      {tip.data.tags.slice(0, 3).map(tag => (
                        <span class="tag bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-xs font-medium transition-all duration-300 hover:bg-blue-100 hover:text-blue-700">
                          #{tag}
                        </span>
                      ))}
                      {tip.data.tags.length > 3 && (
                        <span class="text-xs text-gray-400">+{tip.data.tags.length - 3} more</span>
                      )}
                    </div>
                  )}
                  
                  <div class="flex items-center justify-between">
                    <span class="inline-flex items-center text-blue-600 font-semibold text-sm group-hover:text-blue-700 transition-colors duration-300">
                      <span class="mr-2">Read More</span>
                      <svg class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                      </svg>
                    </span>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Category filtering
    const categoryBtns = document.querySelectorAll('.category-btn');
    const tipCards = document.querySelectorAll('.tip-card');
    
    categoryBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const category = btn.dataset.category;
        
        // Update active button
        categoryBtns.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        
        // Filter tips
        tipCards.forEach(card => {
          const cardCategory = card.dataset.category;
          if (category === 'all' || cardCategory === category) {
            card.style.display = 'block';
            card.classList.add('animate-in');
          } else {
            card.style.display = 'none';
            card.classList.remove('animate-in');
          }
        });
      });
    });
    
    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-visible');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    document.querySelectorAll('[data-animate]').forEach((el) => {
      observer.observe(el);
    });
  });
</script>

<style>
  /* Base styles */
  .tips-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
    gap: 2rem;
    padding: 0;
  }
  
  .tip-card {
    background: white;
    border-radius: 1.5rem;
    overflow: hidden;
    transition: all 0.7s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(229, 231, 235, 0.5);
    opacity: 0;
    transform: translateY(20px);
    height: fit-content;
  }
  
  .tip-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
  }
  
  .category-btn {
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    border-radius: 2rem;
    border: 2px solid #e5e7eb;
    background: white;
    color: #6b7280;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
    white-space: nowrap;
  }
  
  .category-btn:hover,
  .category-btn.active {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    color: white;
    border-color: transparent;
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Animation classes */
  [data-animate] {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
  }
  
  [data-animate].animate-visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  .tip-card.animate-visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Staggered animation delays */
  [data-animate-delay="200"] { transition-delay: 200ms; }
  [data-animate-delay="300"] { transition-delay: 300ms; }
  [data-animate-delay="400"] { transition-delay: 400ms; }
  [data-animate-delay="500"] { transition-delay: 500ms; }
  [data-animate-delay="600"] { transition-delay: 600ms; }
  [data-animate-delay="700"] { transition-delay: 700ms; }
  [data-animate-delay="800"] { transition-delay: 800ms; }
  
  /* Grid pattern background */
  .bg-grid-pattern {
    background-image: radial-gradient(circle, #e5e7eb 1px, transparent 1px);
    background-size: 20px 20px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .tips-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .category-btn {
      padding: 0.5rem 1rem;
      font-size: 0.8rem;
    }
  }
  
  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
  
  /* Performance optimizations */
  .tip-card img {
    will-change: transform;
  }
  
  .backdrop-blur-sm {
    backdrop-filter: blur(4px);
  }
</style>