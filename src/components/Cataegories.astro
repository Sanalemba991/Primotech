---
const categories = [
  {
    id: 1,
    title: "Panda P Series",
    subtitle: "Wireless Security Made Simple",
    description: "Experience seamless wireless surveillance with our advanced Wi-Fi cameras featuring HD video quality, night vision, and smartphone connectivity.",
    image: "/images/wifi camera.png",
    buttonText: "Learn more ",
    buttonLink: "/products/pandap",
    alignLeft: true
  },
  {
    id: 2,
    title: "Dual Light Rainbow",
    subtitle: "Professional Network Surveillance",
    description: "Advanced IP camera systems with Network Video Recorders for enterprise-grade security solutions and monitoring.",
    image: "/images/ip camera.png",
    buttonText: "Learn more ",
    buttonLink: "/products/duallight",
    alignLeft: false
  },
  { 
    id: 3,
    title: "Analog Cameras",
    subtitle: "Next-Generation Protection",
    description: "Complete smart security solutions with AI-powered features, cloud storage, and seamless integration capabilities.",
    image: "/images/eshop products.png",
    buttonText: "Learn more ",
    buttonLink: "/products/analog",
    alignLeft: true
  }
];
---

<div class="bg-gradient-to-r from-teal-900/80 to-transparent">
  <section class="py-16 bg-gray-50">
    <div class="w-full flex flex-col gap-8 categories-container">
      {categories.map((category, index) => (
        <div 
          class={`relative bg-cover bg-center h-[70vh] w-full category-slide ${category.alignLeft ? 'category-slide-from-left' : 'category-slide-from-right'}`}
          style={`background-image: url('${category.image}')`}
          data-category-index={index}
        >
          <div class={`absolute inset-0 category-overlay-fade ${
            index === 1 
              ? 'bg-gradient-to-l from-teal-900/80 to-transparent' 
              : 'bg-gradient-to-r from-teal-900/80 to-transparent'
          }`}></div>
          <div class={`absolute inset-0 flex flex-col justify-center px-12 text-white category-content-reveal ${category.alignLeft ? 'items-start' : 'items-end text-right'}`}>
            <h2 class="text-6xl font-bold mb-3 text-white drop-shadow-lg category-title-animate">{category.title}</h2>
            <p class="text-xl mb-3 text-gray-200 category-subtitle-animate">{category.subtitle}</p>
            <p class="text-base mb-6 opacity-90 max-w-lg leading-relaxed text-gray-300 category-description-animate">{category.description}</p>
            <a 
              href={category.buttonLink}
              class="text-cyan-300 hover:text-cyan-100 text-lg font-medium transition-all duration-300 inline-block group drop-shadow-md category-button-animate"
            >
              {category.buttonText.replace(' >>', '')}<span class="transition-transform duration-300 group-hover:translate-x-2 inline-block text-lg">â†’</span>
            </a>
          </div>
        </div>
      ))}
    </div>
  </section>
</div>

<style>
/* Categories container */
.categories-container {
  overflow-x: hidden;
}

/* Category base animations */
.category-slide {
  opacity: 0;
  will-change: transform, opacity;
  transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform: translateZ(0); /* Hardware acceleration */
}

/* Left slide animation */
.category-slide-from-left {
  transform: translateX(-100px) scale(0.95) translateZ(0);
}

.category-slide-from-left.category-in-view {
  opacity: 1;
  transform: translateX(0) scale(1) translateZ(0);
}

/* Right slide animation */
.category-slide-from-right {
  transform: translateX(100px) scale(0.95) translateZ(0);
}

.category-slide-from-right.category-in-view {
  opacity: 1;
  transform: translateX(0) scale(1) translateZ(0);
}

/* Overlay fade animation */
.category-overlay-fade {
  opacity: 0;
  will-change: opacity;
  transition: opacity 0.6s ease-out;
}

.category-slide.category-in-view .category-overlay-fade {
  opacity: 1;
  transition-delay: 0.1s;
}

/* Content reveal animations */
.category-content-reveal {
  opacity: 0;
  will-change: transform, opacity;
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.category-slide-from-left .category-content-reveal {
  transform: translateX(-30px) translateZ(0);
}

.category-slide-from-right .category-content-reveal {
  transform: translateX(30px) translateZ(0);
}

.category-slide.category-in-view .category-content-reveal {
  opacity: 1;
  transform: translateX(0) translateZ(0);
  transition-delay: 0.2s;
}

/* Staggered text animations */
.category-title-animate {
  opacity: 0;
  transform: translateY(20px) translateZ(0);
  will-change: transform, opacity;
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.category-subtitle-animate {
  opacity: 0;
  transform: translateY(15px) translateZ(0);
  will-change: transform, opacity;
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.category-description-animate {
  opacity: 0;
  transform: translateY(15px) translateZ(0);
  will-change: transform, opacity;
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.category-button-animate {
  opacity: 0;
  transform: translateY(15px) translateZ(0);
  will-change: transform, opacity;
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Animate text elements when category is in view */
.category-slide.category-in-view .category-title-animate {
  opacity: 1;
  transform: translateY(0) translateZ(0);
  transition-delay: 0.3s;
}

.category-slide.category-in-view .category-subtitle-animate {
  opacity: 1;
  transform: translateY(0) translateZ(0);
  transition-delay: 0.4s;
}

.category-slide.category-in-view .category-description-animate {
  opacity: 1;
  transform: translateY(0) translateZ(0);
  transition-delay: 0.5s;
}

.category-slide.category-in-view .category-button-animate {
  opacity: 1;
  transform: translateY(0) translateZ(0);
  transition-delay: 0.6s;
}

/* Mobile responsiveness - Simplified animations */
@media (max-width: 768px) {
  .category-slide-from-left {
    transform: translateY(30px) translateZ(0);
  }
  
  .category-slide-from-right {
    transform: translateY(30px) translateZ(0);
  }
  
  .category-slide-from-left.category-in-view,
  .category-slide-from-right.category-in-view {
    transform: translateY(0) translateZ(0);
  }
  
  .category-slide-from-left .category-content-reveal,
  .category-slide-from-right .category-content-reveal {
    transform: translateY(20px) translateZ(0);
  }
  
  .category-slide.category-in-view .category-content-reveal {
    transform: translateY(0) translateZ(0);
  }
  
  /* Reduce stagger delays on mobile */
  .category-slide.category-in-view .category-title-animate {
    transition-delay: 0.2s;
  }
  
  .category-slide.category-in-view .category-subtitle-animate {
    transition-delay: 0.25s;
  }
  
  .category-slide.category-in-view .category-description-animate {
    transition-delay: 0.3s;
  }
  
  .category-slide.category-in-view .category-button-animate {
    transition-delay: 0.35s;
  }
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .category-slide,
  .category-content-reveal,
  .category-title-animate,
  .category-subtitle-animate,
  .category-description-animate,
  .category-button-animate {
    transition-duration: 0.01s !important;
    transition-delay: 0s !important;
  }
}
</style>

<script>
// Optimized intersection observer for better mobile performance
const categoryObserverOptions = {
  threshold: 0.2,
  rootMargin: '50px 0px -50px 0px'
};

const categoryObserver = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      const category = entry.target;
      const index = parseInt((category as HTMLElement).dataset.categoryIndex || '0');
      
      // Reduced stagger delay for smoother performance
      const delay = window.innerWidth <= 768 ? index * 100 : index * 150;
      
      setTimeout(() => {
        category.classList.add('category-in-view');
      }, delay);
      
      // Stop observing once animated to improve performance
      categoryObserver.unobserve(category);
    }
  });
}, categoryObserverOptions);

// Initialize with requestAnimationFrame for better performance
function initializeCategoryAnimations() {
  const categorySlides = document.querySelectorAll('.category-slide');
  
  requestAnimationFrame(() => {
    categorySlides.forEach(category => {
      categoryObserver.observe(category);
    });
  });
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeCategoryAnimations);
} else {
  initializeCategoryAnimations();
}

// Throttle scroll events on mobile for better performance
let scrollTimeout;
window.addEventListener('scroll', () => {
  if (scrollTimeout) {
    clearTimeout(scrollTimeout);
  }
  scrollTimeout = setTimeout(() => {
    // Any scroll-related logic here
  }, 16); // ~60fps
}, { passive: true });
</script>